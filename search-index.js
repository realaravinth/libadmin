var searchIndex = JSON.parse('{\
"db_core":{"doc":"<code>libadmin</code> database operations","t":[8,0,0,0,0,0,0,0,8,8,8,16,16,16,16,16,16,16,16,8,8,3,8,8,8,3,8,11,11,11,11,11,11,10,12,10,11,11,11,10,11,11,12,12,11,11,11,11,11,11,11,10,10,10,10,12,10,8,0,0,3,8,16,16,8,3,8,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,10,8,3,16,16,8,8,3,11,11,11,11,12,10,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,10,23,13,4,13,6,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,8,16,16,16,8,8,16,10,10,10,5,5,5,5],"n":["LibAdminDatabase","account","auth","dev","errors","ops","prelude","tests","Account","DeleteAccount","EmailExists","Error","Error","Error","Error","Error","Error","Error","Error","GetSecret","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","delete_account","email","email_exists","fmt","from","from","get_secret","into","into","new_username","old_username","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_email","update_password","update_secret","update_username","username","username_exists","Auth","login","register","Creds","EmailLogin","Error","Error","Login","Password","UsernameLogin","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","email_login","fmt","fmt","from","from","into","into","password","password","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","username","username_login","EmailRegister","EmailRegisterPayload","Error","Error","Register","UsernameRegister","UsernameRegisterPayload","borrow","borrow","borrow_mut","borrow_mut","email","email_register","from","from","into","into","password","password","secret","secret","try_from","try_from","try_into","try_into","type_id","type_id","username","username","username_register","async_trait","AccountNotFound","DBError","DBError","DBResult","DuplicateEmail","DuplicateSecret","DuplicateUsername","borrow","borrow_mut","eq","fmt","fmt","from","into","ne","source","to_string","try_from","try_into","type_id","Conn","Connect","DBOps","Error","Error","Error","GetConnection","Migrate","Pool","connect","get_conn","migrate","duplicate_secret_guard_works","duplicate_username_and_email","email_register_works","username_register_works"],"q":["db_core","","","","","","","","db_core::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_core::auth","","","db_core::auth::login","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_core::auth::register","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_core::dev","db_core::errors","","","","","","","","","","","","","","","","","","","","db_core::ops","","","","","","","","","","","","db_core::tests","","",""],"d":["Top level trait describing all libadmin database …","Account operations: update email, password and account …","Authentication and registration operations","useful imports for supporting a new database","represents all the ways a trait can fail using this crate","meta operations like migration and connecting to a …","useful imports for users working with a supported database","Test utilities","Top-level trait grouping all account management operations","Delete an account","Check if an email exists in the database","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","get user secret from database","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","","","","","","","delete account from database","new email","check if an email exists in the database","","","","update secret in database","","","new username","old usename","","","","","","","","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","name of the user who’s email is to be updated","check if a username exists in the database","Top-level trait grouping authentication and registration …","Login mechanisms and datastructures","registration operations","data structure describing credentials of a user","Login using email as user-identifier","database specific error-type","database specific error-type","Top-level trait grouping different login mechanisms","data structure containing only a password field","Login using username as user-identifier","","","","","","","","","login with email as user-identifier","","","","","","","password","password","","","","","","","","","username","login with username as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","database specific error-type","database specific error-type","Top-level traits group all registration mechanisms","register with username only","payload to register a user with only username","","","","","password of new user","username <em>and</em> email is available during registration","","","","","password of new user","password of new user","a randomly generated secret associated with an account","a randomly generated secret associated with an account","","","","","","","username of new user","username provided during registration","register with username","","Account with specified characteristics not found","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","email is already taken","user secret is already taken","username is already taken","","","","","","","","","","","","","","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","database specific error-type","database specific error-type","database specific error-type","Get database connection","database migrations","database specific pool-type","create connection pool","get connection from connection pool","run migrations","test duplicate secret errors","check if duplicate username and duplicate email guards …","test email registration implementation","test username registration implementation"],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,0,0,0,0,0,0,0,0,9,10,9,10,10,10,4,10,3,10,9,10,8,9,10,9,9,10,9,10,9,10,9,10,1,2,7,6,10,5,0,0,0,0,0,11,12,0,0,0,13,14,13,14,13,14,13,14,11,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,12,0,0,15,16,0,0,0,17,18,17,18,17,15,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,16,0,19,0,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,0,0,20,21,22,0,0,21,21,20,22,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["updateemailpayload",3]],[[]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["creds",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["str",15],["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["creds",3]],[[],["password",3]],[[]],[[]],[[["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[["emailregisterpayload",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[["usernameregisterpayload",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[["dberror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["dberror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]]],"p":[[8,"UpdateEmail"],[8,"UpdatePassword"],[8,"EmailExists"],[8,"DeleteAccount"],[8,"UsernameExists"],[8,"UpdateUsername"],[8,"UpdateSecret"],[8,"GetSecret"],[3,"UpdateUsernamePayload"],[3,"UpdateEmailPayload"],[8,"EmailLogin"],[8,"UsernameLogin"],[3,"Creds"],[3,"Password"],[8,"EmailRegister"],[8,"UsernameRegister"],[3,"EmailRegisterPayload"],[3,"UsernameRegisterPayload"],[4,"DBError"],[8,"GetConnection"],[8,"Connect"],[8,"Migrate"]]},\
"db_sqlx_postgres":{"doc":"<code>libadmin</code> database operations implemented using sqlx …","t":[3,3,0,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,8,8,13,13,8,8,13,13,13,13,16,16,8,8,3,3,4,4,13,13,8,8,6,6,13,13,8,8,13,13,13,13,13,13,8,8,8,8,8,8,3,3,4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,13,8,8,8,8,8,8,13,3,3,16,16,13,13,13,8,8,13,13,13,8,8,3,3,8,8,8,8,8,8,3,3,8,8,8,8,8,8,3,3,13,0,0,11,23,0,0,11,11,10,10,10,10,0,12,12,12,12,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,10,10,10,10,11,11,0,0,5,10,10,12,12,12,12,0,0,12,12,12,12,12,12,12,12,0,0,0,12,12,12,12,11,0,0,11,11,11,11,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,10,10,11,12,12,12,12,12,8,8,3,3,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,3,3,8,8,8,8,8,8,3,3,8,8,10,10,12,12,10,10,10,10,12,12,12,12,12,12,10,10,10,10,10,10,10,10,12,12,12,12,10,10,8,8,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,23,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,0,12,12,10,10,10,10,12,12,12,12,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,12,12,12,12,10,10,10,13,13,4,4,13,13,6,6,13,13,13,13,13,13,3,3,8,8,16,16,16,16,8,8,3,3,8,8,10,10,12,12,12,12,12,12,10,10,16,16,8,8,8,8,16,16,16,16,16,16,8,8,8,8,16,16,10,10,10,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,10,10,0,12,12,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,12,12,12,12,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,23,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,12,12,12,12,10,10,10,8,8,3,3,16,16,16,16,8,8,8,8,3,3,12,12,10,10,12,12,12,12,12,12,12,12,12,12,12,12,10,10,5,5,5,5,5,5,5,5,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,0,12,12,10,10,10,11,0,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,0,10,11,12,12,0,12,12,12,12,0,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,12,12,12,12,10,10,10,11,11,11,11,8,3,8,8,16,16,16,16,16,16,16,16,8,8,3,8,8,8,3,8,10,12,10,10,12,12,12,10,10,10,10,12,12,10,8,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,23,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,0,12,12,10,10,10,10,12,12,12,12,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,11,11,11,11,11,11,10,10,12,12,10,10,10,11,11,11,10,10,11,11,11,10,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,10,10,10,10,12,12,12,12,10,10,10,11,11,11,13,4,13,6,13,13,13,3,8,16,16,8,3,8,10,12,12,12,10,16,8,8,16,16,16,8,8,16,10,10,10,8,3,16,16,8,8,3,12,10,12,12,12,12,12,12,10,5,5,5,5],"n":["ConnectionOptions","Database","account","auth","borrow","borrow","borrow_mut","borrow_mut","connect","delete_account","dev","email_exists","email_login","email_register","from","from","get_conn","get_secret","into","into","migrate","pool","pool_options","prelude","try_from","try_from","try_into","try_into","type_id","type_id","update_email","update_password","update_secret","update_username","url","username_exists","username_login","username_register","vzip","vzip","login","register","Account","Account","AccountNotFound","AccountNotFound","Auth","Auth","ColumnDecode","ColumnIndexOutOfBounds","ColumnNotFound","Configuration","Conn","Conn","Connect","Connect","Creds","Creds","DBError","DBError","DBError","DBError","DBOps","DBOps","DBResult","DBResult","Database","Decode","DeleteAccount","DeleteAccount","DuplicateEmail","DuplicateEmail","DuplicateSecret","DuplicateSecret","DuplicateUsername","DuplicateUsername","EmailExists","EmailExists","EmailLogin","EmailLogin","EmailRegister","EmailRegister","EmailRegisterPayload","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetConnection","GetSecret","GetSecret","Io","LibAdminDatabase","LibAdminDatabase","Login","Login","Migrate","Migrate","Migrate","Password","Password","Pool","Pool","PoolClosed","PoolTimedOut","Protocol","Register","Register","RowNotFound","Tls","TypeNotFound","UpdateEmail","UpdateEmail","UpdateEmailPayload","UpdateEmailPayload","UpdatePassword","UpdatePassword","UpdateSecret","UpdateSecret","UpdateUsername","UpdateUsername","UpdateUsernamePayload","UpdateUsernamePayload","UsernameExists","UsernameExists","UsernameLogin","UsernameLogin","UsernameRegister","UsernameRegister","UsernameRegisterPayload","UsernameRegisterPayload","WorkerCrashed","account","account","as_database_error","async_trait","auth","auth","borrow","borrow_mut","connect","connect","delete_account","delete_account","dev","email","email","email","email","email_exists","email_exists","email_login","email_login","email_register","email_register","errors","errors","fmt","fmt","from","from","from","from","from","get_conn","get_conn","get_secret","get_secret","into","into_database_error","login","login","map_register_err","migrate","migrate","new_username","new_username","old_username","old_username","ops","ops","password","password","password","password","password","password","password","password","prelude","register","register","secret","secret","secret","secret","source","tests","tests","to_string","try_from","try_into","type_id","update_email","update_email","update_password","update_password","update_secret","update_secret","update_username","update_username","username","username","username","username","username","username","username","username","username_exists","username_exists","username_login","username_login","username_register","username_register","vzip","index","index","len","source","type_name","Account","Account","Creds","Creds","DeleteAccount","DeleteAccount","EmailExists","EmailExists","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetSecret","GetSecret","UpdateEmail","UpdateEmail","UpdateEmailPayload","UpdateEmailPayload","UpdatePassword","UpdatePassword","UpdateSecret","UpdateSecret","UpdateUsername","UpdateUsername","UpdateUsernamePayload","UpdateUsernamePayload","UsernameExists","UsernameExists","delete_account","delete_account","email","email","email_exists","email_exists","get_secret","get_secret","new_username","new_username","old_username","old_username","password","password","update_email","update_email","update_password","update_password","update_secret","update_secret","update_username","update_username","username","username","username","username","username_exists","username_exists","Auth","Auth","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","async_trait","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","prelude","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","AccountNotFound","AccountNotFound","DBError","DBError","DBError","DBError","DBResult","DBResult","DuplicateEmail","DuplicateEmail","DuplicateSecret","DuplicateSecret","DuplicateUsername","DuplicateUsername","Creds","Creds","EmailLogin","EmailLogin","Error","Error","Error","Error","Login","Login","Password","Password","UsernameLogin","UsernameLogin","email_login","email_login","password","password","password","password","username","username","username_login","username_login","Conn","Conn","Connect","Connect","DBOps","DBOps","Error","Error","Error","Error","Error","Error","GetConnection","GetConnection","Migrate","Migrate","Pool","Pool","connect","connect","get_conn","get_conn","migrate","migrate","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","connect","delete_account","dev","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","async_trait","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","EmailRegister","EmailRegister","EmailRegisterPayload","EmailRegisterPayload","Error","Error","Error","Error","Register","Register","UsernameRegister","UsernameRegister","UsernameRegisterPayload","UsernameRegisterPayload","email","email","email_register","email_register","password","password","password","password","secret","secret","secret","secret","username","username","username","username","username_register","username_register","duplicate_secret_guard_works","duplicate_secret_guard_works","duplicate_username_and_email","duplicate_username_and_email","email_register_works","email_register_works","username_register_works","username_register_works","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","account","auth","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","connect","delete_account","dev","email","email","email_exists","email_login","email_register","eq","errors","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_conn","get_secret","into","into","into","into","login","migrate","ne","new_username","old_username","ops","password","password","password","password","register","secret","secret","source","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","vzip","vzip","vzip","vzip","Account","Creds","DeleteAccount","EmailExists","Error","Error","Error","Error","Error","Error","Error","Error","GetSecret","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","delete_account","email","email_exists","get_secret","new_username","old_username","password","update_email","update_password","update_secret","update_username","username","username","username_exists","Auth","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","async_trait","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","prelude","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","delete_account","email","email","email_exists","email_login","email_register","from","from","from","get_conn","get_secret","into","into","into","migrate","new_username","old_username","password","password","password","password","secret","secret","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","vzip","vzip","vzip","AccountNotFound","DBError","DBError","DBResult","DuplicateEmail","DuplicateSecret","DuplicateUsername","Creds","EmailLogin","Error","Error","Login","Password","UsernameLogin","email_login","password","password","username","username_login","Conn","Connect","DBOps","Error","Error","Error","GetConnection","Migrate","Pool","connect","get_conn","migrate","EmailRegister","EmailRegisterPayload","Error","Error","Register","UsernameRegister","UsernameRegisterPayload","email","email_register","password","password","secret","secret","username","username","username_register","duplicate_secret_guard_works","duplicate_username_and_email","email_register_works","username_register_works"],"q":["db_sqlx_postgres","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::auth","","db_sqlx_postgres::devdb_sqlx_postgres::dev::Error","","","","","db_sqlx_postgres::dev::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::auth","","db_sqlx_postgres::dev::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::errors","","","","","","","","","","","","","","db_sqlx_postgres::dev::login","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::ops","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::register","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::dev::tests","","","","","","","","db_sqlx_postgres::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::prelude::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::prelude::auth","db_sqlx_postgres::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::prelude::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_postgres::prelude::errors","","","","","","","db_sqlx_postgres::prelude::login","","","","","","","","","","","","db_sqlx_postgres::prelude::ops","","","","","","","","","","","","db_sqlx_postgres::prelude::register","","","","","","","","","","","","","","","","db_sqlx_postgres::prelude::tests","","",""],"d":["Configure database pool","Database pool. All database functionallity(<code>libadmin</code> …","Account operations: update email, password and account …","Authentication and registration operations","","","","","create connection pool","delete account from database","useful imports for supporting a new database","check if an email exists in the database","","","","","get connection from connection pool","update username in database","","","","database pool","Pool options","useful imports for users working with a supported database","","","","","","","","Update password of specified user in database","update username in database","update username in database","database URL","check if a username exists in the database","","","","","Login mechanisms and datastructures","registration operations","Top-level trait grouping all account management operations","Top-level trait grouping all account management operations","Account with specified characteristics not found","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","Top-level trait grouping authentication and registration …","Error occurred while decoding a value from a specific …","Column index was out of bounds.","No column found for the given name.","Error occurred while parsing a connection string.","database connection type","database connection type","Create databse connection","Create databse connection","data structure describing credentials of a user","data structure describing credentials of a user","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","Generic result data structure","Generic result data structure","Error returned from the database.","Error occurred while decoding a value.","Delete an account","Delete an account","email is already taken","email is already taken","user secret is already taken","user secret is already taken","username is already taken","username is already taken","Check if an email exists in the database","Check if an email exists in the database","Login using email as user-identifier","Login using email as user-identifier","register user with username <em>and</em> email","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Represents all the ways a method can fail within SQLx.","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","Get database connection","get user secret from database","get user secret from database","Error communicating with the database backend.","Top level trait describing all libadmin database …","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","Top-level trait grouping different login mechanisms","database migrations","database migrations","","data structure containing only a password field","data structure containing only a password field","database specific pool-type","database specific pool-type","<code>Pool::close</code> was called while we were waiting in …","A <code>Pool::acquire</code> timed out due to connections not becoming …","Unexpected or invalid data encountered while …","Top-level traits group all registration mechanisms","Top-level traits group all registration mechanisms","No rows returned by a query that expected to return at …","Error occurred while attempting to establish a TLS …","Type in query doesn’t exist. Likely due to typo or …","Update email of specified user in database","Update email of specified user in database","payload to update email in the database","payload to update email in the database","Update password of specified user in database","Update password of specified user in database","update user secret in database","update user secret in database","update username in database","update username in database","payload to update a username in database","payload to update a username in database","Check if a username exists on the database","Check if a username exists on the database","Login using username as user-identifier","Login using username as user-identifier","register with username only","register with username only","payload to register a user with only username","payload to register a user with only username","A background worker has crashed.","Account operations: update email, password and account …","Account operations: update email, password and account …","","","Authentication and registration operations","Authentication and registration operations","","","create connection pool","create connection pool","delete account from database","delete account from database","useful imports for supporting a new database","password of new user","password of new user","new email","new email","check if an email exists in the database","check if an email exists in the database","login with email as user-identifier","login with email as user-identifier","username <em>and</em> email is available during registration","username <em>and</em> email is available during registration","represents all the ways a trait can fail using this crate","represents all the ways a trait can fail using this crate","","","","","","","","get connection from connection pool","get connection from connection pool","update secret in database","update secret in database","","","Login mechanisms and datastructures","Login mechanisms and datastructures","map postgres errors to DBError types","run migrations","run migrations","new username","new username","old usename","old usename","meta operations like migration and connecting to a …","meta operations like migration and connecting to a …","password of new user","password of new user","password of new user","password of new user","password","password","password","password","useful imports for users working with a supported database","registration operations","registration operations","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","","Test utilities","Test utilities","","","","","Update email of specified user in database","Update email of specified user in database","Update password of specified user in database","Update password of specified user in database","update secret in database","update secret in database","update username in database","update username in database","username of new user","username of new user","username provided during registration","username provided during registration","name of the user who’s email is to be updated","name of the user who’s email is to be updated","username","username","check if a username exists in the database","check if a username exists in the database","login with username as user-identifier","login with username as user-identifier","register with username","register with username","","","","","","","Top-level trait grouping all account management operations","Top-level trait grouping all account management operations","data structure describing credentials of a user","data structure describing credentials of a user","Delete an account","Delete an account","Check if an email exists in the database","Check if an email exists in the database","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","get user secret from database","get user secret from database","Update email of specified user in database","Update email of specified user in database","payload to update email in the database","payload to update email in the database","Update password of specified user in database","Update password of specified user in database","update user secret in database","update user secret in database","update username in database","update username in database","payload to update a username in database","payload to update a username in database","Check if a username exists on the database","Check if a username exists on the database","delete account from database","delete account from database","new email","new email","check if an email exists in the database","check if an email exists in the database","update secret in database","update secret in database","new username","new username","old usename","old usename","password","password","Update email of specified user in database","Update email of specified user in database","Update password of specified user in database","Update password of specified user in database","update secret in database","update secret in database","update username in database","update username in database","name of the user who’s email is to be updated","name of the user who’s email is to be updated","username","username","check if a username exists in the database","check if a username exists in the database","Top-level trait grouping authentication and registration …","Top-level trait grouping authentication and registration …","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","useful imports for users working with a supported database","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Account with specified characteristics not found","Account with specified characteristics not found","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Generic result data structure","Generic result data structure","email is already taken","email is already taken","user secret is already taken","user secret is already taken","username is already taken","username is already taken","data structure describing credentials of a user","data structure describing credentials of a user","Login using email as user-identifier","Login using email as user-identifier","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Top-level trait grouping different login mechanisms","Top-level trait grouping different login mechanisms","data structure containing only a password field","data structure containing only a password field","Login using username as user-identifier","Login using username as user-identifier","login with email as user-identifier","login with email as user-identifier","password","password","password","password","username","username","login with username as user-identifier","login with username as user-identifier","database connection type","database connection type","Create databse connection","Create databse connection","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","Get database connection","database migrations","database migrations","database specific pool-type","database specific pool-type","create connection pool","create connection pool","get connection from connection pool","get connection from connection pool","run migrations","run migrations","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","create connection pool","delete account from database","useful imports for supporting a new database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","register user with username <em>and</em> email","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","payload to register a user with username <em>and</em> email","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Top-level traits group all registration mechanisms","Top-level traits group all registration mechanisms","register with username only","register with username only","payload to register a user with only username","payload to register a user with only username","password of new user","password of new user","username <em>and</em> email is available during registration","username <em>and</em> email is available during registration","password of new user","password of new user","password of new user","password of new user","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","username of new user","username of new user","username provided during registration","username provided during registration","register with username","register with username","test duplicate secret errors","test duplicate secret errors","check if duplicate username and duplicate email guards …","check if duplicate username and duplicate email guards …","test email registration implementation","test email registration implementation","test username registration implementation","test username registration implementation","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","Account operations: update email, password and account …","Authentication and registration operations","","","","","","","","","","","","","","","create connection pool","delete account from database","useful imports for supporting a new database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","","represents all the ways a trait can fail using this crate","","","","","","","","","","get connection from connection pool","update secret in database","","","","","Login mechanisms and datastructures","run migrations","","new username","old usename","meta operations like migration and connecting to a …","password of new user","password of new user","password","password","registration operations","a randomly generated secret associated with an account","a randomly generated secret associated with an account","","Test utilities","","","","","","","","","","","","","","","","","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","","","","","Top-level trait grouping all account management operations","data structure describing credentials of a user","Delete an account","Check if an email exists in the database","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","get user secret from database","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","delete account from database","new email","check if an email exists in the database","update secret in database","new username","old usename","password","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","name of the user who’s email is to be updated","username","check if a username exists in the database","Top-level trait grouping authentication and registration …","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","useful imports for users working with a supported database","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","","","","","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","","","","get connection from connection pool","update secret in database","","","","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","","","","","","","","","","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","","","","Account with specified characteristics not found","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","email is already taken","user secret is already taken","username is already taken","data structure describing credentials of a user","Login using email as user-identifier","database specific error-type","database specific error-type","Top-level trait grouping different login mechanisms","data structure containing only a password field","Login using username as user-identifier","login with email as user-identifier","password","password","username","login with username as user-identifier","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","database specific error-type","database specific error-type","database specific error-type","Get database connection","database migrations","database specific pool-type","create connection pool","get connection from connection pool","run migrations","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","database specific error-type","database specific error-type","Top-level traits group all registration mechanisms","register with username only","payload to register a user with only username","password of new user","username <em>and</em> email is available during registration","password of new user","password of new user","a randomly generated secret associated with an account","a randomly generated secret associated with an account","username of new user","username provided during registration","register with username","test duplicate secret errors","check if duplicate username and duplicate email guards …","test email registration implementation","test username registration implementation"],"i":[0,0,0,0,1,2,1,2,2,1,0,1,1,1,1,2,1,1,1,2,1,1,2,0,1,2,1,2,1,2,1,1,1,1,2,1,1,1,1,2,0,0,0,0,3,3,0,0,4,4,4,4,5,5,0,0,0,0,0,0,3,3,0,0,0,0,4,4,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,5,5,18,18,19,19,0,0,0,0,4,0,0,0,0,0,0,4,0,0,18,18,4,4,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,4,4,18,18,9,9,0,20,20,21,21,8,8,14,14,16,16,0,0,4,4,4,4,4,4,4,5,5,13,13,4,4,0,0,0,19,19,22,22,22,22,0,0,20,20,23,23,24,24,25,25,0,0,0,20,20,23,23,4,0,0,4,4,4,4,6,6,7,7,12,12,11,11,20,20,23,23,21,21,24,24,10,10,15,15,17,17,4,26,27,26,27,28,0,0,0,0,0,0,0,0,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,21,21,8,8,13,13,22,22,22,22,24,24,6,6,7,7,12,12,11,11,21,21,24,24,10,10,0,0,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,0,20,23,6,7,12,11,20,23,21,24,10,15,17,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,20,23,6,7,12,11,20,23,21,24,10,15,17,3,3,0,0,3,3,0,0,3,3,3,3,3,3,0,0,0,0,14,14,15,15,0,0,0,0,0,0,14,14,24,24,25,25,24,24,15,15,5,5,0,0,0,0,5,5,18,18,19,19,0,0,0,0,18,18,18,18,5,5,19,19,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,18,9,0,20,21,8,14,16,5,13,19,22,22,20,23,24,25,20,23,6,7,12,11,20,23,21,24,10,15,17,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,20,23,6,7,12,11,20,23,21,24,10,15,17,0,0,0,0,16,16,17,17,0,0,0,0,0,0,20,20,16,16,20,20,23,23,20,20,23,23,20,20,23,23,17,17,0,0,0,0,0,0,0,0,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,21,24,25,3,21,24,25,3,21,24,25,21,24,25,18,9,0,20,21,8,14,16,3,0,21,24,25,3,3,21,24,25,3,5,13,21,24,25,3,0,19,3,22,22,0,20,23,24,25,0,20,23,3,0,21,24,25,3,21,24,25,3,21,24,25,3,21,24,25,3,6,7,12,11,20,23,21,24,10,15,17,21,24,25,3,0,0,0,0,6,7,8,9,10,11,12,13,0,0,0,0,0,0,0,0,9,21,8,13,22,22,24,6,7,12,11,21,24,10,0,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,0,20,23,6,7,12,11,20,23,21,24,10,15,17,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,22,20,23,22,20,23,18,9,20,21,8,14,16,22,20,23,5,13,22,20,23,19,22,22,20,23,24,25,20,23,22,20,23,22,20,23,22,20,23,6,7,12,11,20,23,21,24,10,15,17,22,20,23,3,0,3,0,3,3,3,0,0,14,15,0,0,0,14,24,25,24,15,5,0,0,5,18,19,0,0,18,18,5,19,0,0,16,17,0,0,0,20,16,20,23,20,23,20,23,17,0,0,0,0],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["emailregisterpayload",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15],["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["databaseerror"]],["databaseerror",8]]],null,null,null,[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["error",3]],["error",4]],[[]],[[["invaliddnsnameerror",3]],["error",4]],[[["migrateerror",4]],["error",4]],[[],["error",4]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[],[["option",4,["box"]],["box",3,["databaseerror","global"]]]],null,null,[[["error",4]],[["dberror",4,["error"]],["error",4]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["error"]],["error",8]]],null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["updateemailpayload",3]],[[],["creds",3]],[[],["password",3]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["dberror",4]],["bool",15]],null,[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[]],[[]],[[]],null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["dberror",4]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["error"]],["error",8]]],null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]]],"p":[[3,"Database"],[3,"ConnectionOptions"],[4,"DBError"],[4,"Error"],[8,"GetConnection"],[8,"UpdateEmail"],[8,"UpdatePassword"],[8,"EmailExists"],[8,"DeleteAccount"],[8,"UsernameExists"],[8,"UpdateUsername"],[8,"UpdateSecret"],[8,"GetSecret"],[8,"EmailLogin"],[8,"UsernameLogin"],[8,"EmailRegister"],[8,"UsernameRegister"],[8,"Connect"],[8,"Migrate"],[3,"EmailRegisterPayload"],[3,"UpdateEmailPayload"],[3,"UpdateUsernamePayload"],[3,"UsernameRegisterPayload"],[3,"Creds"],[3,"Password"],[13,"ColumnIndexOutOfBounds"],[13,"ColumnDecode"],[13,"TypeNotFound"]]},\
"db_sqlx_sqlite":{"doc":"","t":[3,3,0,0,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,8,8,13,13,8,8,13,13,13,13,16,16,8,8,3,3,4,4,13,13,8,8,6,6,13,13,8,8,13,13,13,13,13,13,8,8,8,8,8,8,3,3,4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,13,8,8,8,8,8,8,13,3,3,16,16,13,13,13,8,8,13,13,13,8,8,3,3,8,8,8,8,8,8,3,3,8,8,8,8,8,8,3,3,13,0,0,11,23,0,0,11,11,10,10,10,10,0,12,12,12,12,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,10,10,10,10,11,11,0,0,10,10,12,12,12,12,0,0,12,12,12,12,12,12,12,12,0,0,0,12,12,12,12,11,0,0,11,11,11,11,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,10,10,11,12,12,12,12,12,8,8,3,3,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,3,3,8,8,8,8,8,8,3,3,8,8,10,10,12,12,10,10,10,10,12,12,12,12,12,12,10,10,10,10,10,10,10,10,12,12,12,12,10,10,8,8,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,23,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,0,12,12,10,10,10,10,12,12,12,12,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,12,12,12,12,10,10,10,13,13,4,4,13,13,6,6,13,13,13,13,13,13,3,3,8,8,16,16,16,16,8,8,3,3,8,8,10,10,12,12,12,12,12,12,10,10,16,16,8,8,8,8,16,16,16,16,16,16,8,8,8,8,16,16,10,10,10,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,10,10,0,12,12,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,12,12,12,12,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,23,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,10,10,10,12,12,12,12,10,10,10,8,8,3,3,16,16,16,16,8,8,8,8,3,3,12,12,10,10,12,12,12,12,12,12,12,12,12,12,12,12,10,10,5,5,5,5,5,5,5,5,5,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,0,12,12,10,10,10,11,0,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,0,10,11,12,12,0,12,12,12,12,0,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,12,12,12,12,10,10,10,11,11,11,11,8,3,8,8,16,16,16,16,16,16,16,16,8,8,3,8,8,8,3,8,10,12,10,10,12,12,12,10,10,10,10,12,12,10,8,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,23,10,10,12,12,10,10,10,10,10,10,12,12,12,12,12,12,0,12,12,10,10,10,10,12,12,12,12,10,10,10,8,13,8,16,8,3,4,13,8,6,8,13,13,13,8,8,8,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,3,16,8,8,3,8,8,8,3,8,8,8,3,11,11,11,11,11,11,10,10,12,12,10,10,10,11,11,11,10,10,11,11,11,10,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,10,10,10,10,12,12,12,12,10,10,10,11,11,11,13,4,13,6,13,13,13,3,8,16,16,8,3,8,10,12,12,12,10,16,8,8,16,16,16,8,8,16,10,10,10,8,3,16,16,8,8,3,12,10,12,12,12,12,12,12,10,5,5,5,5],"n":["ConnectionOptions","Database","account","auth","borrow","borrow","borrow_mut","borrow_mut","connect","delete_account","dev","email_exists","email_login","email_register","errors","from","from","get_conn","get_secret","into","into","migrate","pool","pool_options","prelude","try_from","try_from","try_into","try_into","type_id","type_id","update_email","update_password","update_secret","update_username","url","username_exists","username_login","username_register","vzip","vzip","login","register","Account","Account","AccountNotFound","AccountNotFound","Auth","Auth","ColumnDecode","ColumnIndexOutOfBounds","ColumnNotFound","Configuration","Conn","Conn","Connect","Connect","Creds","Creds","DBError","DBError","DBError","DBError","DBOps","DBOps","DBResult","DBResult","Database","Decode","DeleteAccount","DeleteAccount","DuplicateEmail","DuplicateEmail","DuplicateSecret","DuplicateSecret","DuplicateUsername","DuplicateUsername","EmailExists","EmailExists","EmailLogin","EmailLogin","EmailRegister","EmailRegister","EmailRegisterPayload","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetConnection","GetSecret","GetSecret","Io","LibAdminDatabase","LibAdminDatabase","Login","Login","Migrate","Migrate","Migrate","Password","Password","Pool","Pool","PoolClosed","PoolTimedOut","Protocol","Register","Register","RowNotFound","Tls","TypeNotFound","UpdateEmail","UpdateEmail","UpdateEmailPayload","UpdateEmailPayload","UpdatePassword","UpdatePassword","UpdateSecret","UpdateSecret","UpdateUsername","UpdateUsername","UpdateUsernamePayload","UpdateUsernamePayload","UsernameExists","UsernameExists","UsernameLogin","UsernameLogin","UsernameRegister","UsernameRegister","UsernameRegisterPayload","UsernameRegisterPayload","WorkerCrashed","account","account","as_database_error","async_trait","auth","auth","borrow","borrow_mut","connect","connect","delete_account","delete_account","dev","email","email","email","email","email_exists","email_exists","email_login","email_login","email_register","email_register","errors","errors","fmt","fmt","from","from","from","from","from","get_conn","get_conn","get_secret","get_secret","into","into_database_error","login","login","migrate","migrate","new_username","new_username","old_username","old_username","ops","ops","password","password","password","password","password","password","password","password","prelude","register","register","secret","secret","secret","secret","source","tests","tests","to_string","try_from","try_into","type_id","update_email","update_email","update_password","update_password","update_secret","update_secret","update_username","update_username","username","username","username","username","username","username","username","username","username_exists","username_exists","username_login","username_login","username_register","username_register","vzip","index","index","len","source","type_name","Account","Account","Creds","Creds","DeleteAccount","DeleteAccount","EmailExists","EmailExists","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetSecret","GetSecret","UpdateEmail","UpdateEmail","UpdateEmailPayload","UpdateEmailPayload","UpdatePassword","UpdatePassword","UpdateSecret","UpdateSecret","UpdateUsername","UpdateUsername","UpdateUsernamePayload","UpdateUsernamePayload","UsernameExists","UsernameExists","delete_account","delete_account","email","email","email_exists","email_exists","get_secret","get_secret","new_username","new_username","old_username","old_username","password","password","update_email","update_email","update_password","update_password","update_secret","update_secret","update_username","update_username","username","username","username","username","username_exists","username_exists","Auth","Auth","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","async_trait","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","prelude","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","AccountNotFound","AccountNotFound","DBError","DBError","DBError","DBError","DBResult","DBResult","DuplicateEmail","DuplicateEmail","DuplicateSecret","DuplicateSecret","DuplicateUsername","DuplicateUsername","Creds","Creds","EmailLogin","EmailLogin","Error","Error","Error","Error","Login","Login","Password","Password","UsernameLogin","UsernameLogin","email_login","email_login","password","password","password","password","username","username","username_login","username_login","Conn","Conn","Connect","Connect","DBOps","DBOps","Error","Error","Error","Error","Error","Error","GetConnection","GetConnection","Migrate","Migrate","Pool","Pool","connect","connect","get_conn","get_conn","migrate","migrate","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","connect","delete_account","dev","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","async_trait","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","EmailRegister","EmailRegister","EmailRegisterPayload","EmailRegisterPayload","Error","Error","Error","Error","Register","Register","UsernameRegister","UsernameRegister","UsernameRegisterPayload","UsernameRegisterPayload","email","email","email_register","email_register","password","password","password","password","secret","secret","secret","secret","username","username","username","username","username_register","username_register","duplicate_secret_guard_works","duplicate_secret_guard_works","duplicate_username_and_email","duplicate_username_and_email","email_register_works","email_register_works","username_register_works","username_register_works","map_register_err","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","account","auth","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","connect","delete_account","dev","email","email","email_exists","email_login","email_register","eq","errors","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_conn","get_secret","into","into","into","into","login","migrate","ne","new_username","old_username","ops","password","password","password","password","register","secret","secret","source","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","vzip","vzip","vzip","vzip","Account","Creds","DeleteAccount","EmailExists","Error","Error","Error","Error","Error","Error","Error","Error","GetSecret","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","delete_account","email","email_exists","get_secret","new_username","old_username","password","update_email","update_password","update_secret","update_username","username","username","username_exists","Auth","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","async_trait","connect","delete_account","email","email","email_exists","email_login","email_register","get_conn","get_secret","migrate","new_username","old_username","password","password","password","password","prelude","secret","secret","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","Account","AccountNotFound","Auth","Conn","Connect","Creds","DBError","DBError","DBOps","DBResult","DeleteAccount","DuplicateEmail","DuplicateSecret","DuplicateUsername","EmailExists","EmailLogin","EmailRegister","EmailRegisterPayload","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","Error","GetConnection","GetSecret","LibAdminDatabase","Login","Migrate","Password","Pool","Register","UpdateEmail","UpdateEmailPayload","UpdatePassword","UpdateSecret","UpdateUsername","UpdateUsernamePayload","UsernameExists","UsernameLogin","UsernameRegister","UsernameRegisterPayload","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","delete_account","email","email","email_exists","email_login","email_register","from","from","from","get_conn","get_secret","into","into","into","migrate","new_username","old_username","password","password","password","password","secret","secret","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_email","update_password","update_secret","update_username","username","username","username","username","username_exists","username_login","username_register","vzip","vzip","vzip","AccountNotFound","DBError","DBError","DBResult","DuplicateEmail","DuplicateSecret","DuplicateUsername","Creds","EmailLogin","Error","Error","Login","Password","UsernameLogin","email_login","password","password","username","username_login","Conn","Connect","DBOps","Error","Error","Error","GetConnection","Migrate","Pool","connect","get_conn","migrate","EmailRegister","EmailRegisterPayload","Error","Error","Register","UsernameRegister","UsernameRegisterPayload","email","email_register","password","password","secret","secret","username","username","username_register","duplicate_secret_guard_works","duplicate_username_and_email","email_register_works","username_register_works"],"q":["db_sqlx_sqlite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::auth","","db_sqlx_sqlite::devdb_sqlx_sqlite::dev::Error","","","","","db_sqlx_sqlite::dev::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::auth","","db_sqlx_sqlite::dev::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::errors","","","","","","","","","","","","","","db_sqlx_sqlite::dev::login","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::ops","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::register","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::tests","","","","","","","","db_sqlx_sqlite::errors","db_sqlx_sqlite::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::auth","db_sqlx_sqlite::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::errors","","","","","","","db_sqlx_sqlite::prelude::login","","","","","","","","","","","","db_sqlx_sqlite::prelude::ops","","","","","","","","","","","","db_sqlx_sqlite::prelude::register","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::tests","","",""],"d":["","","","Authentication and registration operations","","","","","","delete account from database","","check if an email exists in the database","","","","","","","update username in database","","","","","","","","","","","","","","Update password of specified user in database","update username in database","update username in database","","check if a username exists in the database","","","","","","","Top-level trait grouping all account management operations","Top-level trait grouping all account management operations","Account with specified characteristics not found","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","Top-level trait grouping authentication and registration …","Error occurred while decoding a value from a specific …","Column index was out of bounds.","No column found for the given name.","Error occurred while parsing a connection string.","database connection type","database connection type","Create databse connection","Create databse connection","data structure describing credentials of a user","data structure describing credentials of a user","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","Generic result data structure","Generic result data structure","Error returned from the database.","Error occurred while decoding a value.","Delete an account","Delete an account","email is already taken","email is already taken","user secret is already taken","user secret is already taken","username is already taken","username is already taken","Check if an email exists in the database","Check if an email exists in the database","Login using email as user-identifier","Login using email as user-identifier","register user with username <em>and</em> email","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Represents all the ways a method can fail within SQLx.","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","Get database connection","get user secret from database","get user secret from database","Error communicating with the database backend.","Top level trait describing all libadmin database …","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","Top-level trait grouping different login mechanisms","database migrations","database migrations","","data structure containing only a password field","data structure containing only a password field","database specific pool-type","database specific pool-type","<code>Pool::close</code> was called while we were waiting in …","A <code>Pool::acquire</code> timed out due to connections not becoming …","Unexpected or invalid data encountered while …","Top-level traits group all registration mechanisms","Top-level traits group all registration mechanisms","No rows returned by a query that expected to return at …","Error occurred while attempting to establish a TLS …","Type in query doesn’t exist. Likely due to typo or …","Update email of specified user in database","Update email of specified user in database","payload to update email in the database","payload to update email in the database","Update password of specified user in database","Update password of specified user in database","update user secret in database","update user secret in database","update username in database","update username in database","payload to update a username in database","payload to update a username in database","Check if a username exists on the database","Check if a username exists on the database","Login using username as user-identifier","Login using username as user-identifier","register with username only","register with username only","payload to register a user with only username","payload to register a user with only username","A background worker has crashed.","Account operations: update email, password and account …","Account operations: update email, password and account …","","","Authentication and registration operations","Authentication and registration operations","","","create connection pool","create connection pool","delete account from database","delete account from database","useful imports for supporting a new database","password of new user","password of new user","new email","new email","check if an email exists in the database","check if an email exists in the database","login with email as user-identifier","login with email as user-identifier","username <em>and</em> email is available during registration","username <em>and</em> email is available during registration","represents all the ways a trait can fail using this crate","represents all the ways a trait can fail using this crate","","","","","","","","get connection from connection pool","get connection from connection pool","update secret in database","update secret in database","","","Login mechanisms and datastructures","Login mechanisms and datastructures","run migrations","run migrations","new username","new username","old usename","old usename","meta operations like migration and connecting to a …","meta operations like migration and connecting to a …","password of new user","password of new user","password of new user","password of new user","password","password","password","password","useful imports for users working with a supported database","registration operations","registration operations","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","","Test utilities","Test utilities","","","","","Update email of specified user in database","Update email of specified user in database","Update password of specified user in database","Update password of specified user in database","update secret in database","update secret in database","update username in database","update username in database","username of new user","username of new user","username provided during registration","username provided during registration","name of the user who’s email is to be updated","name of the user who’s email is to be updated","username","username","check if a username exists in the database","check if a username exists in the database","login with username as user-identifier","login with username as user-identifier","register with username","register with username","","","","","","","Top-level trait grouping all account management operations","Top-level trait grouping all account management operations","data structure describing credentials of a user","data structure describing credentials of a user","Delete an account","Delete an account","Check if an email exists in the database","Check if an email exists in the database","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","get user secret from database","get user secret from database","Update email of specified user in database","Update email of specified user in database","payload to update email in the database","payload to update email in the database","Update password of specified user in database","Update password of specified user in database","update user secret in database","update user secret in database","update username in database","update username in database","payload to update a username in database","payload to update a username in database","Check if a username exists on the database","Check if a username exists on the database","delete account from database","delete account from database","new email","new email","check if an email exists in the database","check if an email exists in the database","update secret in database","update secret in database","new username","new username","old usename","old usename","password","password","Update email of specified user in database","Update email of specified user in database","Update password of specified user in database","Update password of specified user in database","update secret in database","update secret in database","update username in database","update username in database","name of the user who’s email is to be updated","name of the user who’s email is to be updated","username","username","check if a username exists in the database","check if a username exists in the database","Top-level trait grouping authentication and registration …","Top-level trait grouping authentication and registration …","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","useful imports for users working with a supported database","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Account with specified characteristics not found","Account with specified characteristics not found","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Generic result data structure","Generic result data structure","email is already taken","email is already taken","user secret is already taken","user secret is already taken","username is already taken","username is already taken","data structure describing credentials of a user","data structure describing credentials of a user","Login using email as user-identifier","Login using email as user-identifier","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Top-level trait grouping different login mechanisms","Top-level trait grouping different login mechanisms","data structure containing only a password field","data structure containing only a password field","Login using username as user-identifier","Login using username as user-identifier","login with email as user-identifier","login with email as user-identifier","password","password","password","password","username","username","login with username as user-identifier","login with username as user-identifier","database connection type","database connection type","Create databse connection","Create databse connection","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","Get database connection","database migrations","database migrations","database specific pool-type","database specific pool-type","create connection pool","create connection pool","get connection from connection pool","get connection from connection pool","run migrations","run migrations","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","create connection pool","delete account from database","useful imports for supporting a new database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","register user with username <em>and</em> email","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","payload to register a user with username <em>and</em> email","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Top-level traits group all registration mechanisms","Top-level traits group all registration mechanisms","register with username only","register with username only","payload to register a user with only username","payload to register a user with only username","password of new user","password of new user","username <em>and</em> email is available during registration","username <em>and</em> email is available during registration","password of new user","password of new user","password of new user","password of new user","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","a randomly generated secret associated with an account","username of new user","username of new user","username provided during registration","username provided during registration","register with username","register with username","test duplicate secret errors","test duplicate secret errors","check if duplicate username and duplicate email guards …","check if duplicate username and duplicate email guards …","test email registration implementation","test email registration implementation","test username registration implementation","test username registration implementation","","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","Account operations: update email, password and account …","Authentication and registration operations","","","","","","","","","","","","","","","create connection pool","delete account from database","useful imports for supporting a new database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","","represents all the ways a trait can fail using this crate","","","","","","","","","","get connection from connection pool","update secret in database","","","","","Login mechanisms and datastructures","run migrations","","new username","old usename","meta operations like migration and connecting to a …","password of new user","password of new user","password","password","registration operations","a randomly generated secret associated with an account","a randomly generated secret associated with an account","","Test utilities","","","","","","","","","","","","","","","","","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","","","","","Top-level trait grouping all account management operations","data structure describing credentials of a user","Delete an account","Check if an email exists in the database","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","get user secret from database","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","delete account from database","new email","check if an email exists in the database","update secret in database","new username","old usename","password","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","name of the user who’s email is to be updated","username","check if a username exists in the database","Top-level trait grouping authentication and registration …","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","get connection from connection pool","update secret in database","run migrations","new username","old usename","password of new user","password of new user","password","password","useful imports for users working with a supported database","a randomly generated secret associated with an account","a randomly generated secret associated with an account","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","Top-level trait grouping all account management operations","Account with specified characteristics not found","Top-level trait grouping authentication and registration …","database connection type","Create databse connection","data structure describing credentials of a user","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","Delete an account","email is already taken","user secret is already taken","username is already taken","Check if an email exists in the database","Login using email as user-identifier","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","Database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","database specific error-type","Get database connection","get user secret from database","Top level trait describing all libadmin database …","Top-level trait grouping different login mechanisms","database migrations","data structure containing only a password field","database specific pool-type","Top-level traits group all registration mechanisms","Update email of specified user in database","payload to update email in the database","Update password of specified user in database","update user secret in database","update username in database","payload to update a username in database","Check if a username exists on the database","Login using username as user-identifier","register with username only","payload to register a user with only username","","","","","","","create connection pool","delete account from database","password of new user","new email","check if an email exists in the database","login with email as user-identifier","username <em>and</em> email is available during registration","","","","get connection from connection pool","update secret in database","","","","run migrations","new username","old usename","password of new user","password of new user","password","password","a randomly generated secret associated with an account","a randomly generated secret associated with an account","","","","","","","","","","Update email of specified user in database","Update password of specified user in database","update secret in database","update username in database","username of new user","username provided during registration","name of the user who’s email is to be updated","username","check if a username exists in the database","login with username as user-identifier","register with username","","","","Account with specified characteristics not found","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","email is already taken","user secret is already taken","username is already taken","data structure describing credentials of a user","Login using email as user-identifier","database specific error-type","database specific error-type","Top-level trait grouping different login mechanisms","data structure containing only a password field","Login using username as user-identifier","login with email as user-identifier","password","password","username","login with username as user-identifier","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","database specific error-type","database specific error-type","database specific error-type","Get database connection","database migrations","database specific pool-type","create connection pool","get connection from connection pool","run migrations","register user with username <em>and</em> email","payload to register a user with username <em>and</em> email","database specific error-type","database specific error-type","Top-level traits group all registration mechanisms","register with username only","payload to register a user with only username","password of new user","username <em>and</em> email is available during registration","password of new user","password of new user","a randomly generated secret associated with an account","a randomly generated secret associated with an account","username of new user","username provided during registration","register with username","test duplicate secret errors","check if duplicate username and duplicate email guards …","test email registration implementation","test username registration implementation"],"i":[0,0,0,0,1,2,1,2,2,1,0,1,1,1,0,1,2,1,1,1,2,1,1,2,0,1,2,1,2,1,2,1,1,1,1,2,1,1,1,1,2,0,0,0,0,3,3,0,0,4,4,4,4,5,5,0,0,0,0,0,0,3,3,0,0,0,0,4,4,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,5,5,18,18,19,19,0,0,0,0,4,0,0,0,0,0,0,4,0,0,18,18,4,4,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,4,4,18,18,9,9,0,20,20,21,21,8,8,14,14,16,16,0,0,4,4,4,4,4,4,4,5,5,13,13,4,4,0,0,19,19,22,22,22,22,0,0,20,20,23,23,24,24,25,25,0,0,0,20,20,23,23,4,0,0,4,4,4,4,6,6,7,7,12,12,11,11,20,20,23,23,21,21,24,24,10,10,15,15,17,17,4,26,27,26,27,28,0,0,0,0,0,0,0,0,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,21,21,8,8,13,13,22,22,22,22,24,24,6,6,7,7,12,12,11,11,21,21,24,24,10,10,0,0,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,0,20,23,6,7,12,11,20,23,21,24,10,15,17,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,20,23,6,7,12,11,20,23,21,24,10,15,17,3,3,0,0,3,3,0,0,3,3,3,3,3,3,0,0,0,0,14,14,15,15,0,0,0,0,0,0,14,14,24,24,25,25,24,24,15,15,5,5,0,0,0,0,5,5,18,18,19,19,0,0,0,0,18,18,18,18,5,5,19,19,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,18,9,0,20,21,8,14,16,5,13,19,22,22,20,23,24,25,20,23,6,7,12,11,20,23,21,24,10,15,17,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,20,23,6,7,12,11,20,23,21,24,10,15,17,0,0,0,0,16,16,17,17,0,0,0,0,0,0,20,20,16,16,20,20,23,23,20,20,23,23,20,20,23,23,17,17,0,0,0,0,0,0,0,0,0,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,21,24,25,3,21,24,25,3,21,24,25,21,24,25,18,9,0,20,21,8,14,16,3,0,21,24,25,3,3,21,24,25,3,5,13,21,24,25,3,0,19,3,22,22,0,20,23,24,25,0,20,23,3,0,21,24,25,3,21,24,25,3,21,24,25,3,21,24,25,3,6,7,12,11,20,23,21,24,10,15,17,21,24,25,3,0,0,0,0,6,7,8,9,10,11,12,13,0,0,0,0,0,0,0,0,9,21,8,13,22,22,24,6,7,12,11,21,24,10,0,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,9,20,21,8,14,16,5,13,19,22,22,20,23,24,25,0,20,23,6,7,12,11,20,23,21,24,10,15,17,0,3,0,5,0,0,0,3,0,0,0,3,3,3,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,5,18,19,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,22,20,23,22,20,23,18,9,20,21,8,14,16,22,20,23,5,13,22,20,23,19,22,22,20,23,24,25,20,23,22,20,23,22,20,23,22,20,23,6,7,12,11,20,23,21,24,10,15,17,22,20,23,3,0,3,0,3,3,3,0,0,14,15,0,0,0,14,24,25,24,15,5,0,0,5,18,19,0,0,18,18,5,19,0,0,16,17,0,0,0,20,16,20,23,20,23,20,23,17,0,0,0,0],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["emailregisterpayload",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["updateemailpayload",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15],["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["updateusernamepayload",3]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["usernameregisterpayload",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["databaseerror",8],["option",4,["databaseerror"]]]],null,null,null,[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["migrateerror",4]],["error",4]],[[]],[[["invaliddnsnameerror",3]],["error",4]],[[],["error",4]],[[["error",3]],["error",4]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[],[["option",4,["box"]],["box",3,["databaseerror","global"]]]],null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["error"]],["error",8]]],null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["error",4]],[["dberror",4,["error"]],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["updateemailpayload",3]],[[],["creds",3]],[[],["password",3]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["dberror",4]],["bool",15]],null,[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[]],[[]],[[]],null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["dberror",4]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["error"]],["error",8]]],null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["updateemailpayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["creds",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15],["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["updateusernamepayload",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,null,[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],null,null,null,null,null,null,null,null,[[["emailregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],null,null,null,null,null,null,[[["usernameregisterpayload",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]]],"p":[[3,"Database"],[3,"ConnectionOptions"],[4,"DBError"],[4,"Error"],[8,"GetConnection"],[8,"UpdateEmail"],[8,"UpdatePassword"],[8,"EmailExists"],[8,"DeleteAccount"],[8,"UsernameExists"],[8,"UpdateUsername"],[8,"UpdateSecret"],[8,"GetSecret"],[8,"EmailLogin"],[8,"UsernameLogin"],[8,"EmailRegister"],[8,"UsernameRegister"],[8,"Connect"],[8,"Migrate"],[3,"EmailRegisterPayload"],[3,"UpdateEmailPayload"],[3,"UpdateUsernamePayload"],[3,"UsernameRegisterPayload"],[3,"Creds"],[3,"Password"],[13,"ColumnIndexOutOfBounds"],[13,"ColumnDecode"],[13,"TypeNotFound"]]},\
"libadmin":{"doc":"<code>libadmin</code>","t":[17,3,3,17,12,12,11,11,11,11,11,11,11,12,12,12,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,17,17,5],"n":["CACHE_AGE","Data","Settings","V1_API_ROUTES","allow_demo","allow_registration","borrow","borrow","borrow_mut","borrow_mut","change_password","clone","clone_into","creds","database","db","default","delete_user","demo","deserialize","email_exists","fmt","from","from","get_creds","get_secret","into","into","login","new","register","server","set_email","settings","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_user_secret","update_username","username_exists","vzip","vzip","DEMO_PASSWORD","DEMO_USER","run"],"q":["libadmin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libadmin::demo","",""],"d":["Default cache age for static assets","App data","Top-level settings data structure","constant Routes instance","enable demo user","enable registration","","","","","change password","","","credential-procession policy","database configuration","databse pool","","delete user","Demo user: Enable users to try out your application …","","check if email exists on database","","","","Get credential-processing policy","get account secret of a registered user","","","Log in method. Returns <code>Ok(())</code> when user is authenticated …","create new instance of app data","register new user","Domain name and cookie secret","update email","settings","","","","","","","","update account secret of a registered user","update username of a registered user","check if email exists in database","","","Demo password","Demo username","creates and deletes demo user periodically"],"i":[0,0,0,0,1,1,2,1,2,1,2,1,1,2,1,2,1,2,0,1,2,1,2,1,2,2,2,1,2,2,2,1,2,2,1,2,1,2,1,2,1,2,2,2,2,1,0,0,0],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["str",15],["changepasswordreqest",3]]],[[],["settings",3]],[[]],null,null,null,[[]],[[["str",15]]],null,[[],["result",4]],[[["str",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["config",3]],[[["str",15]]],[[]],[[]],[[["login",3]]],[[["settings",3]]],[[["register",3]]],null,[[["str",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[]],[[]],null,null,[[["duration",3],["libadmindatabase",8],["data",3]]]],"p":[[3,"Settings"],[3,"Data"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};