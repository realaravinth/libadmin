initSidebarItems({"attr":[["async_trait",""]],"enum":[["DBError","Error data structure grouping various error subtypes"],["DBError","Error data structure grouping various error subtypes"],["Error","Represents all the ways a method can fail within SQLx."]],"fn":[["map_register_err","map postgres errors to DBError types"]],"mod":[["account","Account operations: update email, password and account secrets, etc."],["account","Account operations: update email, password and account secrets, etc."],["auth","Authentication and registration operations"],["auth","Authentication and registration operations"],["dev","useful imports for supporting a new database"],["errors","represents all the ways a trait can fail using this crate"],["errors","represents all the ways a trait can fail using this crate"],["login","Login mechanisms and datastructures"],["login","Login mechanisms and datastructures"],["ops","meta operations like migration and connecting to a database"],["ops","meta operations like migration and connecting to a database"],["prelude","useful imports for users working with a supported database"],["register","registration operations"],["register","registration operations"],["tests","Test utilities"],["tests","Test utilities"]],"struct":[["Creds","data structure describing credentials of a user"],["Creds","data structure describing credentials of a user"],["EmailRegisterPayload","payload to register a user with username and email"],["EmailRegisterPayload","payload to register a user with username and email"],["Password","data structure containing only a password field"],["Password","data structure containing only a password field"],["UpdateEmailPayload","payload to update email in the database"],["UpdateEmailPayload","payload to update email in the database"],["UpdateUsernamePayload","payload to update a username in database"],["UpdateUsernamePayload","payload to update a username in database"],["UsernameRegisterPayload","payload to register a user with only username"],["UsernameRegisterPayload","payload to register a user with only username"]],"trait":[["Account","Top-level trait grouping all account management operations"],["Account","Top-level trait grouping all account management operations"],["Auth","Top-level trait grouping authentication and registration operations"],["Auth","Top-level trait grouping authentication and registration operations"],["Connect","Create databse connection"],["Connect","Create databse connection"],["DBOps","Database operations trait(migrations, pool creation and fetching connection from pool)"],["DBOps","Database operations trait(migrations, pool creation and fetching connection from pool)"],["DeleteAccount","Delete an account"],["DeleteAccount","Delete an account"],["EmailExists","Check if an email exists in the database"],["EmailExists","Check if an email exists in the database"],["EmailLogin","Login using email as user-identifier"],["EmailLogin","Login using email as user-identifier"],["EmailRegister","register user with username and email"],["EmailRegister","register user with username and email"],["GetConnection","Get database connection"],["GetConnection","Get database connection"],["GetSecret","get user secret from database"],["GetSecret","get user secret from database"],["LibAdminDatabase","Top level trait describing all libadmin database operations"],["LibAdminDatabase","Top level trait describing all libadmin database operations"],["Login","Top-level trait grouping different login mechanisms"],["Login","Top-level trait grouping different login mechanisms"],["Migrate","database migrations"],["Migrate","database migrations"],["Register","Top-level traits group all registration mechanisms"],["Register","Top-level traits group all registration mechanisms"],["UpdateEmail","Update email of specified user in database"],["UpdateEmail","Update email of specified user in database"],["UpdatePassword","Update password of specified user in database"],["UpdatePassword","Update password of specified user in database"],["UpdateSecret","update user secret in database"],["UpdateSecret","update user secret in database"],["UpdateUsername","update username in database"],["UpdateUsername","update username in database"],["UsernameExists","Check if a username exists on the database"],["UsernameExists","Check if a username exists on the database"],["UsernameLogin","Login using username as user-identifier"],["UsernameLogin","Login using username as user-identifier"],["UsernameRegister","register with username only"],["UsernameRegister","register with username only"]],"type":[["DBResult","Generic result data structure"],["DBResult","Generic result data structure"]]});